export ฮt, ฮฮพ, dd

function ฮt(fโ, fโ, dm)
    ๐ * dm * (fโ^-2 - fโ^-2)
end

function ฮฮพ!(ฮพ, fโ, ฮf, nf, nt, ฮดt, dm)
    ฮดf = ฮf / nf
    fโ = fโ + ฮดf
    for i โ 1:nf
        f = fโ - i * ฮดf
        ฮดฮพ = ฮt(f, fโ, dm) รท ฮดt
        ฮพ[i] = ฮดฮพ < nt ? ฮดฮพ : 0
    end
end

function ฮฮพ(fโ, ฮf, nf, nt, ฮดt, DM)
    ฮพ = zeros(Int64, nf)
    ฮฮพ!(ฮพ, fโ, ฮf, nf, nt, ฮดt, DM)
    ฮพ
end

function dd(I, fโ, ฮf, ฮดt, dm)
    nt, nf = size(I)
    ฮพ = ฮฮพ(fโ, ฮf, nf, nt, ฮดt, dm)
    X = zeros(eltype(I), nt - maximum(ฮพ))
    @inbounds Threads.@threads for j โ axes(I, 2)
        @inbounds for i โ eachindex(X)
            X[i] += I[CartesianIndex(i + ฮพ[j], j)]
        end
    end
    X
end
